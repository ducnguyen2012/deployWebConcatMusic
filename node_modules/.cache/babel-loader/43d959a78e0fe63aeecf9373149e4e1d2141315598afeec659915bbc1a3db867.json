{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\OneDrive\\\\Documents\\\\FUNBUG\\\\websiteLearning\\\\client\\\\src\\\\Page\\\\DownloadPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DownloadPage = () => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [estimateTime, setEstimateTime] = useState(null); // State to hold the estimate time\n\n  useEffect(() => {\n    const fetchFiles = async () => {\n      try {\n        const response = await fetch('http://localhost:3000/DownloadPage'); // Correct the URL if needed\n        if (response.ok) {\n          const data = await response.json();\n          setFiles(data.Files); // Assuming the response contains a list of filenames in `Files` key\n          setEstimateTime(data.estimate_time); // Set the estimate time from the response\n        } else {\n          console.error('Failed to fetch files');\n        }\n      } catch (error) {\n        console.error('Error fetching files:', error);\n      }\n    };\n    fetchFiles();\n  }, []);\n  const handleDownload = filename => {\n    // Create a link element and trigger a download\n    const link = document.createElement('a');\n    link.href = `http://localhost:3000/download/${filename}`; // Correct the URL if needed\n    link.download = filename; // Optional: specifies the name for the downloaded file\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Available Files\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"IF there is no Estimated Time for Concatenation, means your file is being process\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"please wait until Estimated Time for Concatenation time is appear!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), estimateTime !== null, /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: files.map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Estimated Time for Concatenation: \", estimateTime.toFixed(2), \" seconds\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDownload(file),\n          children: file\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(DownloadPage, \"NQ+3cVI85IeUweDEvfrQgTHU4Xs=\");\n_c = DownloadPage;\nexport default DownloadPage;\nvar _c;\n$RefreshReg$(_c, \"DownloadPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","DownloadPage","_s","files","setFiles","estimateTime","setEstimateTime","fetchFiles","response","fetch","ok","data","json","Files","estimate_time","console","error","handleDownload","filename","link","document","createElement","href","download","body","appendChild","click","removeChild","children","fileName","_jsxFileName","lineNumber","columnNumber","map","file","index","toFixed","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/OneDrive/Documents/FUNBUG/websiteLearning/client/src/Page/DownloadPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nexport const DownloadPage = () => {\r\n  const [files, setFiles] = useState([]);\r\n  const [estimateTime, setEstimateTime] = useState(null); // State to hold the estimate time\r\n\r\n  useEffect(() => {\r\n    const fetchFiles = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:3000/DownloadPage'); // Correct the URL if needed\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setFiles(data.Files); // Assuming the response contains a list of filenames in `Files` key\r\n          setEstimateTime(data.estimate_time); // Set the estimate time from the response\r\n        } else {\r\n          console.error('Failed to fetch files');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching files:', error);\r\n      }\r\n    };\r\n\r\n    fetchFiles();\r\n  }, []);\r\n\r\n  const handleDownload = (filename) => {\r\n    // Create a link element and trigger a download\r\n    const link = document.createElement('a');\r\n    link.href = `http://localhost:3000/download/${filename}`; // Correct the URL if needed\r\n    link.download = filename; // Optional: specifies the name for the downloaded file\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Available Files</h1>\r\n      <h2>IF there is no Estimated Time for Concatenation, means your file is being process</h2>\r\n      <h2>please wait until Estimated Time for Concatenation time is appear!</h2>\r\n      {estimateTime !== null}\r\n      \r\n      \r\n      \r\n      <ul>\r\n        {files.map((file, index) => (\r\n          <li key={index}>\r\n            <p>Estimated Time for Concatenation: {estimateTime.toFixed(2)} seconds</p> \r\n            <button onClick={() => handleDownload(file)}>{file}</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DownloadPage;\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}