{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\OneDrive\\\\Documents\\\\FUNBUG\\\\websiteLearning\\\\client\\\\src\\\\Page\\\\UploadPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function UploadPage() {\n  _s();\n  const [selectedFiles, setSelectedFiles] = useState(null);\n  const handleFileChange = event => {\n    setSelectedFiles(event.target.files);\n  };\n  const handleUpload = async event => {\n    console.log(\"This is all selectedFiles: \" + selectedFiles);\n    event.preventDefault();\n    if (setSelectedFiles.length === 0) return;\n    const formData = new FormData();\n    Array.from(selectedFiles).forEach(file => {\n      formData.append(\"files\", file);\n    });\n    try {\n      const response = await fetch(\"http://localhost:5000/upload\", {\n        method: \"POST\",\n        body: formData\n      });\n      if (response.ok) {\n        console.log(\"File uploaded successfully!\");\n      } else {\n        console.error(\"File upload failed.\");\n      }\n    } catch (error) {\n      console.error(\"Error uploading file:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleUpload,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"fileInput\",\n        multiple: true,\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), selectedFiles && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Selected file: \", selectedFiles.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadPage, \"S5gKaKaQSjpBq52dz/0MTF9xx90=\");\n_c = UploadPage;\nexport default UploadPage;\nvar _c;\n$RefreshReg$(_c, \"UploadPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UploadPage","_s","selectedFiles","setSelectedFiles","handleFileChange","event","target","files","handleUpload","console","log","preventDefault","length","formData","FormData","Array","from","forEach","file","append","response","fetch","method","body","ok","error","children","onSubmit","type","id","multiple","onChange","fileName","_jsxFileName","lineNumber","columnNumber","name","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/OneDrive/Documents/FUNBUG/websiteLearning/client/src/Page/UploadPage.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport function UploadPage() {\r\n  const [selectedFiles, setSelectedFiles] = useState(null);\r\n\r\n  const handleFileChange = (event) => {\r\n    setSelectedFiles(event.target.files);\r\n  };\r\n\r\n  const handleUpload = async (event) => {\r\n    console.log(\"This is all selectedFiles: \" + selectedFiles)\r\n    event.preventDefault();\r\n    if (setSelectedFiles.length === 0) return;\r\n\r\n    const formData = new FormData();\r\n    Array.from(selectedFiles).forEach(file => {\r\n        formData.append(\"files\", file);    \r\n    });\r\n    \r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/upload\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n\r\n      if (response.ok) {\r\n        console.log(\"File uploaded successfully!\");\r\n      } else {\r\n        console.error(\"File upload failed.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error uploading file:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleUpload}>\r\n        <input type=\"file\" id=\"fileInput\" multiple onChange={handleFileChange} />\r\n        <button type=\"submit\">Upload</button>\r\n      </form>\r\n      {selectedFiles && <p>Selected file: {selectedFiles.name}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UploadPage\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,OAAO,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAC3B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAExD,MAAMO,gBAAgB,GAAIC,KAAK,IAAK;IAClCF,gBAAgB,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACtC,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOH,KAAK,IAAK;IACpCI,OAAO,CAACC,GAAG,CAAC,6BAA6B,GAAGR,aAAa,CAAC;IAC1DG,KAAK,CAACM,cAAc,CAAC,CAAC;IACtB,IAAIR,gBAAgB,CAACS,MAAM,KAAK,CAAC,EAAE;IAEnC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BC,KAAK,CAACC,IAAI,CAACd,aAAa,CAAC,CAACe,OAAO,CAACC,IAAI,IAAI;MACtCL,QAAQ,CAACM,MAAM,CAAC,OAAO,EAAED,IAAI,CAAC;IAClC,CAAC,CAAC;IAGF,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;QAC3DC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEV;MACR,CAAC,CAAC;MAEF,IAAIO,QAAQ,CAACI,EAAE,EAAE;QACff,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;MAC5C,CAAC,MAAM;QACLD,OAAO,CAACgB,KAAK,CAAC,qBAAqB,CAAC;MACtC;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdhB,OAAO,CAACgB,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAED,oBACE1B,OAAA;IAAA2B,QAAA,gBACE3B,OAAA;MAAM4B,QAAQ,EAAEnB,YAAa;MAAAkB,QAAA,gBAC3B3B,OAAA;QAAO6B,IAAI,EAAC,MAAM;QAACC,EAAE,EAAC,WAAW;QAACC,QAAQ;QAACC,QAAQ,EAAE3B;MAAiB;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzEpC,OAAA;QAAQ6B,IAAI,EAAC,QAAQ;QAAAF,QAAA,EAAC;MAAM;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,EACNjC,aAAa,iBAAIH,OAAA;MAAA2B,QAAA,GAAG,iBAAe,EAACxB,aAAa,CAACkC,IAAI;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzD,CAAC;AAEV;AAAClC,EAAA,CA3CeD,UAAU;AAAAqC,EAAA,GAAVrC,UAAU;AA6C1B,eAAeA,UAAU;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}